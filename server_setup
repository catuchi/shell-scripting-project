#!/bin/bash

source validate.sh
source create_html.sh

# This script automates the setup of a basic web server environment

if [ ! $EUID -eq 0 ] || [ ! -n "$SUDO_COMMAND" ]; then
	echo "This script must be run as root or with sudo." >&2
	exit 1
fi

while true; do
	read -p "Choose server to install (1 for Apache, 2 for Nginx): " choice
	if validate_choice "$choice"; then
		break
	fi
done

while true; do
        read -p "Enter a hostname: " hname
        if validate_hostname "$hname"; then
                break
        fi
done

echo " "
echo "Updating Package Index"

sudo apt update -y
if [ $? -ne 0 ]; then
	echo "Error: Failed to update packages." >&2
	exit 1
fi

echo " "
echo "Installing $server_name"

sudo apt install "$server_name"
if [ $? -ne 0 ]; then
        echo "Error: Failed to install $server_name." >&2
        exit 1
fi

echo ""
echo "Creating hello.html page"
create_web_page

echo ""
echo "Copying hello.html file to /var/www/html to be served by $(capitalize_first_letter "$server_name")"
cp -f ./hello.html /var/www/html/hello.html
if [ $? -ne 0 ]; then
        echo "Error: Failed to copy file to /var/www/html" >&2
        exit 1
fi

echo ""
sudo systemctl start $server_name
if [ $? -ne 0 ]; then
        echo "Error: Failed to start server" >&2
        exit 1
fi

sudo systemctl enable $server_name
if [ $? -ne 0 ]; then
        echo "Error: Failed to enable server to start on boot" >&2
        exit 1
fi

if [ "$server_name" == "apache2" ]; then
	sudo ufw allow 'Apache'
else
	sudo ufw allow 'Nginx HTTP'
fi

if [ $? -ne 0 ]; then
        echo "Error: Failed to adjust firewall settings" >&2
        exit 1
fi

echo "Congratulations! Your server has been successfully created"
echo "You can visit your hello.ht

